//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Input/AutoInputAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @AutoInputAsset : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @AutoInputAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""AutoInputAsset"",
    ""maps"": [
        {
            ""name"": ""Auto"",
            ""id"": ""19682fa0-23a6-4434-87d2-e40e80099a3c"",
            ""actions"": [
                {
                    ""name"": ""Movimiento"",
                    ""type"": ""Value"",
                    ""id"": ""7843ff10-dbd3-4160-b8a4-b8db517a81f2"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Freno"",
                    ""type"": ""Button"",
                    ""id"": ""f89232cd-513d-40fc-9326-b62a69722ea4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Mirar"",
                    ""type"": ""Value"",
                    ""id"": ""57dbce24-0859-4218-b1ce-d667118e16c5"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Respawn"",
                    ""type"": ""Button"",
                    ""id"": ""4173062e-6fe1-4f27-ab40-930e3ab2fc1b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResEsena"",
                    ""type"": ""Button"",
                    ""id"": ""0dbe7c0c-d84e-4ab1-981b-fd238dd498db"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""25aadc75-e442-4d29-922e-4f91a524e110"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""81eab8c8-f2cf-4e54-960a-b20ff4a014d7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""75306f50-a5aa-497a-8878-ef8ab35d74f3"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""b25b0887-46bb-450c-b9cf-8aa61b86bb2c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f9738b43-d267-41a7-be42-06945fb5ba19"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movimiento"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""874f43ab-1fd8-43c7-93e4-fdf9e1ad6500"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Freno"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9b91974f-b430-4f9e-9cf4-f6d7627cca38"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Mirar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bb253040-e40f-4309-a93c-4a5e63385c65"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Respawn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6785754b-67ad-4f5b-85a7-343482dc5f1b"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResEsena"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Auto
        m_Auto = asset.FindActionMap("Auto", throwIfNotFound: true);
        m_Auto_Movimiento = m_Auto.FindAction("Movimiento", throwIfNotFound: true);
        m_Auto_Freno = m_Auto.FindAction("Freno", throwIfNotFound: true);
        m_Auto_Mirar = m_Auto.FindAction("Mirar", throwIfNotFound: true);
        m_Auto_Respawn = m_Auto.FindAction("Respawn", throwIfNotFound: true);
        m_Auto_ResEsena = m_Auto.FindAction("ResEsena", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Auto
    private readonly InputActionMap m_Auto;
    private IAutoActions m_AutoActionsCallbackInterface;
    private readonly InputAction m_Auto_Movimiento;
    private readonly InputAction m_Auto_Freno;
    private readonly InputAction m_Auto_Mirar;
    private readonly InputAction m_Auto_Respawn;
    private readonly InputAction m_Auto_ResEsena;
    public struct AutoActions
    {
        private @AutoInputAsset m_Wrapper;
        public AutoActions(@AutoInputAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movimiento => m_Wrapper.m_Auto_Movimiento;
        public InputAction @Freno => m_Wrapper.m_Auto_Freno;
        public InputAction @Mirar => m_Wrapper.m_Auto_Mirar;
        public InputAction @Respawn => m_Wrapper.m_Auto_Respawn;
        public InputAction @ResEsena => m_Wrapper.m_Auto_ResEsena;
        public InputActionMap Get() { return m_Wrapper.m_Auto; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AutoActions set) { return set.Get(); }
        public void SetCallbacks(IAutoActions instance)
        {
            if (m_Wrapper.m_AutoActionsCallbackInterface != null)
            {
                @Movimiento.started -= m_Wrapper.m_AutoActionsCallbackInterface.OnMovimiento;
                @Movimiento.performed -= m_Wrapper.m_AutoActionsCallbackInterface.OnMovimiento;
                @Movimiento.canceled -= m_Wrapper.m_AutoActionsCallbackInterface.OnMovimiento;
                @Freno.started -= m_Wrapper.m_AutoActionsCallbackInterface.OnFreno;
                @Freno.performed -= m_Wrapper.m_AutoActionsCallbackInterface.OnFreno;
                @Freno.canceled -= m_Wrapper.m_AutoActionsCallbackInterface.OnFreno;
                @Mirar.started -= m_Wrapper.m_AutoActionsCallbackInterface.OnMirar;
                @Mirar.performed -= m_Wrapper.m_AutoActionsCallbackInterface.OnMirar;
                @Mirar.canceled -= m_Wrapper.m_AutoActionsCallbackInterface.OnMirar;
                @Respawn.started -= m_Wrapper.m_AutoActionsCallbackInterface.OnRespawn;
                @Respawn.performed -= m_Wrapper.m_AutoActionsCallbackInterface.OnRespawn;
                @Respawn.canceled -= m_Wrapper.m_AutoActionsCallbackInterface.OnRespawn;
                @ResEsena.started -= m_Wrapper.m_AutoActionsCallbackInterface.OnResEsena;
                @ResEsena.performed -= m_Wrapper.m_AutoActionsCallbackInterface.OnResEsena;
                @ResEsena.canceled -= m_Wrapper.m_AutoActionsCallbackInterface.OnResEsena;
            }
            m_Wrapper.m_AutoActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movimiento.started += instance.OnMovimiento;
                @Movimiento.performed += instance.OnMovimiento;
                @Movimiento.canceled += instance.OnMovimiento;
                @Freno.started += instance.OnFreno;
                @Freno.performed += instance.OnFreno;
                @Freno.canceled += instance.OnFreno;
                @Mirar.started += instance.OnMirar;
                @Mirar.performed += instance.OnMirar;
                @Mirar.canceled += instance.OnMirar;
                @Respawn.started += instance.OnRespawn;
                @Respawn.performed += instance.OnRespawn;
                @Respawn.canceled += instance.OnRespawn;
                @ResEsena.started += instance.OnResEsena;
                @ResEsena.performed += instance.OnResEsena;
                @ResEsena.canceled += instance.OnResEsena;
            }
        }
    }
    public AutoActions @Auto => new AutoActions(this);
    public interface IAutoActions
    {
        void OnMovimiento(InputAction.CallbackContext context);
        void OnFreno(InputAction.CallbackContext context);
        void OnMirar(InputAction.CallbackContext context);
        void OnRespawn(InputAction.CallbackContext context);
        void OnResEsena(InputAction.CallbackContext context);
    }
}
